{"ast":null,"code":"import axios from 'axios';\nimport { all, call, takeEvery } from 'redux-saga/effects';\nimport animationSaga from './AnimationSaga'; // import { getCart } from './GetCartSaga'\n// notice how we now only export the rootSaga\n// single entry point to start all Sagas at once\n\nexport default function* rootSaga() {\n  yield takeEvery('UPDATE_CART', animationSaga);\n  const {\n    response\n  } = yield call(axios, 'https://saga-quick-attempt-default-rtdb.firebaseio.com/mealcount.json');\n  console.log(\"Saga: \");\n  console.log(JSON.stringify(response)); // yield takeEvery('GET_FIREBASE', getCart)\n} // let response2 = yield call(apiCall, \"POST\", serviceUrl.user, {\n//   title: 'foo',\n//   body: 'bar',\n//   userId: 1,\n// })  //post request","map":{"version":3,"sources":["/Users/braydon/Desktop/React_Training_2021/food-order-app/src/sagas/root.js"],"names":["axios","all","call","takeEvery","animationSaga","rootSaga","response","console","log","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,SAApB,QAAqC,oBAArC;AAEA,OAAOC,aAAP,MAA0B,iBAA1B,C,CACA;AAEA;AACA;;AACA,eAAe,UAAUC,QAAV,GAAqB;AAClC,QAAMF,SAAS,CAAC,aAAD,EAAgBC,aAAhB,CAAf;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAe,MAAMJ,IAAI,CAACF,KAAD,EAAQ,uEAAR,CAA/B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAZ,EAJkC,CAKlC;AACD,C,CAID;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios'\nimport { all, call, takeEvery } from 'redux-saga/effects'\n\nimport animationSaga from './AnimationSaga'\n// import { getCart } from './GetCartSaga'\n\n// notice how we now only export the rootSaga\n// single entry point to start all Sagas at once\nexport default function* rootSaga() {\n  yield takeEvery('UPDATE_CART', animationSaga)\n  const { response } = yield call(axios, 'https://saga-quick-attempt-default-rtdb.firebaseio.com/mealcount.json')\n  console.log(\"Saga: \")\n  console.log(JSON.stringify(response))\n  // yield takeEvery('GET_FIREBASE', getCart)\n}\n\n\n\n// let response2 = yield call(apiCall, \"POST\", serviceUrl.user, {\n//   title: 'foo',\n//   body: 'bar',\n//   userId: 1,\n// })  //post request"]},"metadata":{},"sourceType":"module"}