{"ast":null,"code":"var _jsxFileName = \"/Users/braydon/Desktop/React_Training_2021/food-order-app/src/components/layout/HeaderCartButton.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CartIcon from \"../cart/CartIcon\";\nimport classes from \"./HeaderCartButton.module.css\";\nimport CartButtonContext from '../../store/cart-button-context';\nimport CartContext from '../../store/cart-context';\nimport store from \"../../store/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HeaderCartButton(props) {\n  _s();\n\n  // const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\n  const cartBtnCtx = useContext(CartButtonContext);\n  const cartCtx = useContext(CartContext);\n  const dispatch = useDispatch();\n  const btnHighlighted = useSelector(state => state.btnIsHighlighted);\n  if (btnHighlighted === null) btnHighlighted = false;\n\n  const action = (type, payload) => {\n    if (payload !== null) {\n      dispatch({\n        type,\n        payload\n      });\n    } else {\n      store.dispatch({\n        type\n      });\n    }\n  };\n\n  const {\n    items\n  } = cartCtx; // abstracts ONLY the 'items' property inside the cartCtx object\n  // const highlightHandler = () => {\n  //   dispatch({ type: 'ADD_ANIM' });\n  //   cartBtnCtx.setCartIsOpen()\n  // };\n\n  const numberOfCartItems = cartCtx.items.reduce((curr, item) => {\n    return curr + item.amount;\n  }, 0); // console.log(JSON.stringify(cartBtnCtx))\n\n  const btnClasses = `${classes.button} ${btnHighlighted ? classes.bump : ''}`;\n  useEffect(() => {\n    if (items.length === 0) {\n      return;\n    } // setBtnIsHighlighted(true);\n\n\n    action('SET_BTN_TRUE');\n    const timer = setTimeout(() => {\n      // setBtnIsHighlighted(false);\n      action('SET_BTN_FALSE');\n    }, 300);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: btnClasses,\n      onClick: () => action('ADD_ANIM'),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.icon,\n        children: /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Your Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.badge,\n        children: numberOfCartItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HeaderCartButton, \"NGuioqyVL2I6u6/1jlSQ1/s/WnQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HeaderCartButton;\nexport default HeaderCartButton; // import { useContext, useEffect, useState, useDispatch, useSelector } from \"react\";\n// import CartIcon from \"../cart/CartIcon\";\n// import classes from \"./HeaderCartButton.module.css\";\n// import CartButtonContext from '../../store/cart-button-context'\n// import CartContext from '../../store/cart-context'\n// function HeaderCartButton(props) {\n//   const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\n//   const cartBtnCtx = useContext(CartButtonContext);\n//   const cartCtx = useContext(CartContext);\n//   // const dispatch = useDispatch();\n//   // const counter = useSelector((state) => state.btnIsHighlighted);\n//   // const show = useSelector((state) => state.showCounter);\n//   const { items } = cartCtx // abstracts ONLY the 'items' property inside the cartCtx object\n//   const highlightHandler = () => {\n//     // dispatch({ type: 'ADD_ANIM' });\n//     cartBtnCtx.setCartIsOpen()\n//   };\n//   const numberOfCartItems = cartCtx.items.reduce((curr, item) => {\n//     return curr + item.amount\n//   }, 0);\n//   // console.log(JSON.stringify(cartBtnCtx))\n//   const btnClasses = `${classes.button} ${btnIsHighlighted ? classes.bump : ''}`;\n//   useEffect(() => {\n//     if (items.length === 0) {\n//       return;\n//     }\n//     setBtnIsHighlighted(true);\n//     const timer = setTimeout(() => {\n//       setBtnIsHighlighted(false);\n//     }, 300);\n//     return () => {\n//       clearTimeout(timer);\n//     };\n//   }, [items]);\n//   return (\n//     <div>\n//       <button className={btnClasses} onClick={highlightHandler}>\n//         <span className={classes.icon}>\n//           <CartIcon/>\n//         </span>\n//         <span>\n//           Your Cart\n//         </span>\n//         <span className={classes.badge}>\n//           {numberOfCartItems}\n//         </span>\n//       </button>\n//     </div>\n//   );\n// }\n// export default HeaderCartButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderCartButton\");","map":{"version":3,"sources":["/Users/braydon/Desktop/React_Training_2021/food-order-app/src/components/layout/HeaderCartButton.js"],"names":["useContext","useEffect","useState","useDispatch","useSelector","CartIcon","classes","CartButtonContext","CartContext","store","HeaderCartButton","props","cartBtnCtx","cartCtx","dispatch","btnHighlighted","state","btnIsHighlighted","action","type","payload","items","numberOfCartItems","reduce","curr","item","amount","btnClasses","button","bump","length","timer","setTimeout","clearTimeout","icon","badge"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CartIcon from \"../cart/CartIcon\";\n\nimport classes from \"./HeaderCartButton.module.css\";\nimport CartButtonContext from '../../store/cart-button-context'\nimport CartContext from '../../store/cart-context'\nimport store from \"../../store/index\";\n\nfunction HeaderCartButton(props) {\n  // const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\n  const cartBtnCtx = useContext(CartButtonContext);\n  const cartCtx = useContext(CartContext);\n\n  const dispatch = useDispatch();\n  const btnHighlighted = useSelector((state) => state.btnIsHighlighted);\n  if (btnHighlighted === null) btnHighlighted = false;\n\n  const action = (type, payload) => {\n    if (payload !== null) {\n      dispatch({type, payload})\n    } else {\n      store.dispatch({type})\n    }\n  }\n\n  const { items } = cartCtx // abstracts ONLY the 'items' property inside the cartCtx object\n\n\n  // const highlightHandler = () => {\n  //   dispatch({ type: 'ADD_ANIM' });\n  //   cartBtnCtx.setCartIsOpen()\n  // };\n\n  const numberOfCartItems = cartCtx.items.reduce((curr, item) => {\n    return curr + item.amount\n  }, 0);\n\n  // console.log(JSON.stringify(cartBtnCtx))\n  \n  const btnClasses = `${classes.button} ${btnHighlighted ? classes.bump : ''}`;\n\n  useEffect(() => {\n    if (items.length === 0) {\n      return;\n    }\n    // setBtnIsHighlighted(true);\n    action('SET_BTN_TRUE')\n\n    const timer = setTimeout(() => {\n      // setBtnIsHighlighted(false);\n      action('SET_BTN_FALSE')\n    }, 300);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [items]);\n\n  return (\n    <div>\n      <button className={btnClasses} onClick={() => action('ADD_ANIM')}>\n        <span className={classes.icon}>\n          <CartIcon/>\n        </span>\n        <span>\n          Your Cart\n        </span>\n        <span className={classes.badge}>\n          {numberOfCartItems}\n        </span>\n      </button>\n    </div>\n  );\n}\n\nexport default HeaderCartButton;\n\n\n// import { useContext, useEffect, useState, useDispatch, useSelector } from \"react\";\n// import CartIcon from \"../cart/CartIcon\";\n\n// import classes from \"./HeaderCartButton.module.css\";\n// import CartButtonContext from '../../store/cart-button-context'\n// import CartContext from '../../store/cart-context'\n\n// function HeaderCartButton(props) {\n//   const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\n//   const cartBtnCtx = useContext(CartButtonContext);\n//   const cartCtx = useContext(CartContext);\n\n//   // const dispatch = useDispatch();\n//   // const counter = useSelector((state) => state.btnIsHighlighted);\n//   // const show = useSelector((state) => state.showCounter);\n\n//   const { items } = cartCtx // abstracts ONLY the 'items' property inside the cartCtx object\n\n//   const highlightHandler = () => {\n//     // dispatch({ type: 'ADD_ANIM' });\n//     cartBtnCtx.setCartIsOpen()\n//   };\n\n//   const numberOfCartItems = cartCtx.items.reduce((curr, item) => {\n//     return curr + item.amount\n//   }, 0);\n\n//   // console.log(JSON.stringify(cartBtnCtx))\n  \n//   const btnClasses = `${classes.button} ${btnIsHighlighted ? classes.bump : ''}`;\n\n//   useEffect(() => {\n//     if (items.length === 0) {\n//       return;\n//     }\n//     setBtnIsHighlighted(true);\n\n//     const timer = setTimeout(() => {\n//       setBtnIsHighlighted(false);\n//     }, 300);\n\n//     return () => {\n//       clearTimeout(timer);\n//     };\n//   }, [items]);\n\n//   return (\n//     <div>\n//       <button className={btnClasses} onClick={highlightHandler}>\n//         <span className={classes.icon}>\n//           <CartIcon/>\n//         </span>\n//         <span>\n//           Your Cart\n//         </span>\n//         <span className={classes.badge}>\n//           {numberOfCartItems}\n//         </span>\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default HeaderCartButton;\n"]},"metadata":{},"sourceType":"module"}