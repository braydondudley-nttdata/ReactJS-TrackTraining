{"ast":null,"code":"var _jsxFileName = \"/Users/braydon/Desktop/React_Training_2021/food-order-app/src/components/meals/mealItems/MealItemForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport Input from \"../../ui/Input\";\nimport classes from \"./MealItemForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MealItemForm(props) {\n  _s();\n\n  const [amountIsValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value;\n    const enteredAmountNumber = +enteredAmount; // used to test validity AND updates total count in reducer\n\n    console.log('entered: ' + enteredAmount); // --debugging\n\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      setAmountIsValid(false);\n      return;\n    }\n\n    props.onAddToCart(enteredAmountNumber); // Calls function in MealItem.js that updates state information to cart context\n  }; // NOTE: button in form will automatically trigger onSubmit \n  // (no need to add onClick event, and also need to preventDefault refresh on submission)\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: 'amount_' + props.id,\n        type: 'number',\n        min: '1',\n        max: '5',\n        step: '1',\n        defaultValue: '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), !amountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid amount (range: 1-5).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MealItemForm, \"49LGRK4jBiAcXkiYfsTkxzkpjmw=\");\n\n_c = MealItemForm;\nexport default MealItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"sources":["/Users/braydon/Desktop/React_Training_2021/food-order-app/src/components/meals/mealItems/MealItemForm.js"],"names":["useRef","useState","Input","classes","MealItemForm","props","amountIsValid","setAmountIsValid","amountInputRef","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","console","log","trim","length","onAddToCart","form","id","type","min","max","step","defaultValue"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAMO,cAAc,GAAGR,MAAM,EAA7B;;AAEA,QAAMS,aAAa,GAAIC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,KAA7C;AACA,UAAMC,mBAAmB,GAAG,CAACH,aAA7B,CAJ+B,CAIa;;AAE5CI,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcL,aAA1B,EAN+B,CAMU;;AAEzC,QAAIA,aAAa,CAACM,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IAAqCJ,mBAAmB,GAAG,CAA3D,IAAgEA,mBAAmB,GAAG,CAA1F,EAA6F;AAC3FR,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA;AACD;;AAEDF,IAAAA,KAAK,CAACe,WAAN,CAAkBL,mBAAlB,EAb+B,CAaS;AACzC,GAdD,CAJ2B,CAoB3B;AACA;;;AACA,sBACE;AAAM,IAAA,SAAS,EAAEZ,OAAO,CAACkB,IAAzB;AAA+B,IAAA,QAAQ,EAAEZ,aAAzC;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,GAAG,EAAED,cADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,KAAK,EAAE;AACLc,QAAAA,EAAE,EAAE,YAAYjB,KAAK,CAACiB,EADjB;AAELC,QAAAA,IAAI,EAAE,QAFD;AAGLC,QAAAA,GAAG,EAAE,GAHA;AAILC,QAAAA,GAAG,EAAE,GAJA;AAKLC,QAAAA,IAAI,EAAE,GALD;AAMLC,QAAAA,YAAY,EAAE;AANT;AAHT;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,EAcG,CAACrB,aAAD,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAxCQF,Y;;KAAAA,Y;AA0CT,eAAeA,YAAf","sourcesContent":["import { useRef, useState } from \"react\";\n\nimport Input from \"../../ui/Input\";\nimport classes from \"./MealItemForm.module.css\";\n\nfunction MealItemForm(props) {\n  const [amountIsValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredAmount = amountInputRef.current.value;\n    const enteredAmountNumber = +enteredAmount; // used to test validity AND updates total count in reducer\n\n    console.log('entered: ' + enteredAmount) // --debugging\n\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      setAmountIsValid(false);\n      return;\n    }\n    \n    props.onAddToCart(enteredAmountNumber); // Calls function in MealItem.js that updates state information to cart context\n  }\n\n  // NOTE: button in form will automatically trigger onSubmit \n  // (no need to add onClick event, and also need to preventDefault refresh on submission)\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <Input \n        ref={amountInputRef}\n        label=\"Amount\" \n        input={{\n          id: 'amount_' + props.id,\n          type: 'number',\n          min: '1',\n          max: '5',\n          step: '1',\n          defaultValue: '1',\n        }\n      } />\n      <button>+ Add</button>\n      {!amountIsValid && <p>Please enter a valid amount (range: 1-5).</p>}\n    </form>\n  );\n}\n\nexport default MealItemForm;\n"]},"metadata":{},"sourceType":"module"}