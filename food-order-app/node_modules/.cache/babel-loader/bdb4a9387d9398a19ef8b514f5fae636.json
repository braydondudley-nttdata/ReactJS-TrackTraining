{"ast":null,"code":"var _jsxFileName = \"/Users/braydon/Desktop/React_Training_2021/food-order-app/src/components/cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport Modal from '../ui/Modal';\nimport CartItem from './CartItem';\nimport classes from \"./Cart.module.css\";\nimport CartButtonContext from '../../store/cart-button-context';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart(props) {\n  _s();\n\n  const cartBtnCtx = useContext(CartButtonContext);\n  const cartCtx = useContext(CartContext); // console.log(JSON.stringify(cartCtx)) // --debugging to see contents of cart\n  // const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.RemoveItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.AddItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const listItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      id: item.id,\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this); // [{\n  //   id: 'c1', \n  //   name: 'Bob', \n  //   amount: 3, \n  //   price: 12.99,\n  //   onRemove={cartItemRemoveHandler.bind(null, item.id)},\n  //   onAdd={cartItemAddHandler.bind(null, item)}\n  // }].map(item => <li key={item.id}>{item.name}</li>)\n\n\n  const onOrderHandler = () => {\n    const isValid = true;\n\n    if (isValid) {\n      console.log(\"order submitted\");\n      cartBtnCtx.setCartIsOpen();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [listItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: cartCtx.totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['button--alt'],\n        onClick: cartBtnCtx.setCartIsOpen,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: onOrderHandler,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cart, \"DwtSpcTNzenmnFMw9XzSGHHvIZ0=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/braydon/Desktop/React_Training_2021/food-order-app/src/components/cart/Cart.js"],"names":["useContext","Modal","CartItem","classes","CartButtonContext","CartContext","Checkout","Cart","props","cartBtnCtx","cartCtx","hasItems","items","length","cartItemRemoveHandler","id","RemoveItem","cartItemAddHandler","item","AddItem","amount","listItems","map","name","price","bind","onOrderHandler","isValid","console","log","setCartIsOpen","onClose","total","totalAmount","actions","button"],"mappings":"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","sourcesContent":["import { useContext } from 'react'\n\nimport Modal from '../ui/Modal';\nimport CartItem from './CartItem';\nimport classes from \"./Cart.module.css\";\nimport CartButtonContext from '../../store/cart-button-context'\nimport CartContext from '../../store/cart-context'\nimport Checkout from './Checkout';\n\nfunction Cart(props) {\n  const cartBtnCtx = useContext(CartButtonContext);\n  const cartCtx = useContext(CartContext);\n\n  // console.log(JSON.stringify(cartCtx)) // --debugging to see contents of cart\n\n  // const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.RemoveItem(id);\n  };\n  \n  const cartItemAddHandler = (item) => {\n    cartCtx.AddItem({ ...item, amount: 1 });\n  };\n \n  const listItems = <ul className={classes['cart-items']}>{\n    cartCtx.items.map((item) => (\n      <CartItem\n        key={item.id}\n        id={item.id}\n        name={item.name}\n        amount={item.amount}\n        price={item.price}\n        onRemove={cartItemRemoveHandler.bind(null, item.id)}\n        onAdd={cartItemAddHandler.bind(null, item)}\n      />\n    ))\n  }</ul>\n\n  // [{\n  //   id: 'c1', \n  //   name: 'Bob', \n  //   amount: 3, \n  //   price: 12.99,\n  //   onRemove={cartItemRemoveHandler.bind(null, item.id)},\n  //   onAdd={cartItemAddHandler.bind(null, item)}\n  // }].map(item => <li key={item.id}>{item.name}</li>)\n\n  const onOrderHandler = () => {\n    const isValid = true;\n    if (isValid) {\n      console.log(\"order submitted\")\n      cartBtnCtx.setCartIsOpen()\n    }\n  }\n\n  return (\n    <Modal onClose={props.onClose}>\n      {listItems}\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{cartCtx.totalAmount}</span>\n      </div>\n      <div className={classes.actions}>\n        <button className={classes['button--alt']} onClick={cartBtnCtx.setCartIsOpen}>Close</button>\n        {hasItems && <button className={classes.button} onClick={onOrderHandler}>Order</button>}\n      </div>\n    </Modal>\n  )\n}\n\nexport default Cart\n"]},"metadata":{},"sourceType":"module"}