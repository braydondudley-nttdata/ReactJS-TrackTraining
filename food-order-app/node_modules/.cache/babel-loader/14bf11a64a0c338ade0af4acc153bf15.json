{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport CartContext from './cart-context'; // cartBtnCtx.setCartIsOpen()\n\nimport rootSaga from '../sagas/root';\nconst initialState = {\n  btnIsHighlighted: false\n};\n\nconst postCartHandler = async userData => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n  await fetch('https://saga-quick-attempt-default-rtdb.firebaseio.com/cart.json', {\n    method: 'POST',\n    body: JSON.stringify({\n      cart: cartCtx\n    })\n  });\n};\n\n_s(postCartHandler, \"5vyuBAd9ctzs1tCKQUMcCu/LGtk=\");\n\nexport const AnimationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_BTN_TRUE':\n      console.log(\"true\");\n      return {\n        btnIsHighlighted: true\n      };\n\n    case 'SET_BTN_FALSE':\n      console.log(\"false\");\n      return {\n        btnIsHighlighted: false\n      };\n\n    case 'UPDATE_CART':\n      return state;\n\n    case 'FETCH_CART':\n      return state;\n\n    default:\n      return state;\n  } // if (action.type === 'ADD_ANIM') {\n  //   return {\n  //     btnIsHighlighted: !state.btnIsHighlighted\n  //   };\n  // }\n  // return state;\n\n};\n_c = AnimationReducer;\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(AnimationReducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nexport default store;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimationReducer\");","map":{"version":3,"sources":["/Users/braydon/Desktop/React_Training_2021/food-order-app/src/store/index.js"],"names":["useContext","createStore","applyMiddleware","createSagaMiddleware","CartContext","rootSaga","initialState","btnIsHighlighted","postCartHandler","userData","cartCtx","fetch","method","body","JSON","stringify","cart","AnimationReducer","state","action","type","console","log","sagaMiddleware","store","run"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB,C,CACA;;AAEA,OAAOC,QAAP,MAAqB,eAArB;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,gBAAgB,EAAE;AAApB,CAArB;;AAEA,MAAMC,eAAe,GAAG,MAAOC,QAAP,IAAoB;AAAA;;AAC1C,QAAMC,OAAO,GAAGV,UAAU,CAACI,WAAD,CAA1B;AAEA,QAAMO,KAAK,CAAC,kEAAD,EAAqE;AAC9EC,IAAAA,MAAM,EAAE,MADsE;AAE9EC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,IAAI,EAAEN;AADa,KAAf;AAFwE,GAArE,CAAX;AAMD,CATD;;GAAMF,e;;AAWN,OAAO,MAAMS,gBAAgB,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AAEhE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,aAAO;AAAEf,QAAAA,gBAAgB,EAAE;AAApB,OAAP;;AACF,SAAK,eAAL;AACEc,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,aAAO;AAAEf,QAAAA,gBAAgB,EAAE;AAApB,OAAP;;AACF,SAAK,aAAL;AACE,aAAOW,KAAP;;AACF,SAAK,YAAL;AACE,aAAOA,KAAP;;AACF;AACE,aAAOA,KAAP;AAZJ,GAFgE,CAgBhE;AACA;AACA;AACA;AACA;AACA;;AACD,CAtBM;KAAMD,gB;AAwBb,MAAMM,cAAc,GAAGpB,oBAAoB,EAA3C;AACA,MAAMqB,KAAK,GAAGvB,WAAW,CAACgB,gBAAD,EAAmBf,eAAe,CAACqB,cAAD,CAAlC,CAAzB;AACAA,cAAc,CAACE,GAAf,CAAmBpB,QAAnB;AAEA,eAAemB,KAAf","sourcesContent":["import { useContext } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga'\n\nimport CartContext from './cart-context'\n// cartBtnCtx.setCartIsOpen()\n\nimport rootSaga from '../sagas/root'\n\nconst initialState = { btnIsHighlighted: false };\n\nconst postCartHandler = async (userData) => {\n  const cartCtx = useContext(CartContext);\n\n  await fetch('https://saga-quick-attempt-default-rtdb.firebaseio.com/cart.json', {\n    method: 'POST',\n    body: JSON.stringify({\n      cart: cartCtx\n    }),\n  })\n}\n\nexport const AnimationReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case 'SET_BTN_TRUE':\n      console.log(\"true\")\n      return { btnIsHighlighted: true }\n    case 'SET_BTN_FALSE':\n      console.log(\"false\")\n      return { btnIsHighlighted: false }\n    case 'UPDATE_CART':\n      return state\n    case 'FETCH_CART':\n      return state\n    default:\n      return state\n  }\n  // if (action.type === 'ADD_ANIM') {\n  //   return {\n  //     btnIsHighlighted: !state.btnIsHighlighted\n  //   };\n  // }\n  // return state;\n};\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(AnimationReducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga)\n\nexport default store;"]},"metadata":{},"sourceType":"module"}