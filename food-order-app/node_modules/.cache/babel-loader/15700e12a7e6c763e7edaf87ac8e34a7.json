{"ast":null,"code":"var _jsxFileName = \"/Users/braydon/Desktop/React_Training_2021/food-order-app/src/components/meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport Card from '../ui/Card';\nimport MealItem from './mealItems/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport DUMMY_MEALS from '../../assets/dummy-meals'; // const postHandler = () => {\n//   axios.get('https://saga-quick-attempt-default-rtdb.firebaseio.com/')\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AvailableMeals() {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-http-6b4a6.firebaseio.com/meals.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  const mealsList = DUMMY_MEALS.map(item => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: item.id,\n    name: item.name,\n    description: item.description,\n    price: item.price\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.meals,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: mealsList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AvailableMeals, \"6pndJp/WWpMtmhSnoCH9k0tFnXc=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/braydon/Desktop/React_Training_2021/food-order-app/src/components/meals/AvailableMeals.js"],"names":["useEffect","axios","Card","MealItem","classes","DUMMY_MEALS","AvailableMeals","meals","setMeals","useState","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","mealsList","map","item"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB,C,CACA;AACA;AACA;;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BF,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,EAA1C;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oDAD0B,CAA5B;;AAIA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AAEA,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAgC;AAC9BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFT;AAGfC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHhB;AAIfC,UAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJV,SAAjB;AAMD;;AAEDnB,MAAAA,QAAQ,CAACa,WAAD,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAxBD;;AA0BAG,IAAAA,UAAU,GAAGc,KAAb,CAAoBC,KAAD,IAAW;AAC5BlB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,YAAY,CAACgB,KAAK,CAACC,OAAP,CAAZ;AACD,KAHD;AAID,GA/BQ,EA+BN,EA/BM,CAAT;AAiCA,QAAMC,SAAS,GAAG1B,WAAW,CAAC2B,GAAZ,CAAiBC,IAAD,iBAChC,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACT,EAFX;AAGE,IAAA,IAAI,EAAES,IAAI,CAACR,IAHb;AAIE,IAAA,WAAW,EAAEQ,IAAI,CAACP,WAJpB;AAKE,IAAA,KAAK,EAAEO,IAAI,CAACN;AALd,KACOM,IAAI,CAACT,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAUA,sBACE;AAAA,2BACE;AAAS,MAAA,SAAS,EAAEpB,OAAO,CAACG,KAA5B;AAAA,6BACE,QAAC,IAAD;AAAA,+BACE;AAAA,oBAAKwB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAzDQzB,c;;KAAAA,c;AA2DT,eAAeA,cAAf","sourcesContent":["import { useEffect } from 'react'\nimport axios from 'axios'\n\nimport Card from '../ui/Card';\nimport MealItem from './mealItems/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport DUMMY_MEALS from '../../assets/dummy-meals'\n// const postHandler = () => {\n//   axios.get('https://saga-quick-attempt-default-rtdb.firebaseio.com/')\n// }\n\nfunction AvailableMeals() {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(\n        'https://react-http-6b4a6.firebaseio.com/meals.json'\n      );\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  \n  const mealsList = DUMMY_MEALS.map((item) =>\n    <MealItem\n      key={item.id}\n      id={item.id}\n      name={item.name}\n      description={item.description}\n      price={item.price}\n    />\n  )\n\n  return (\n    <div>\n      <section className={classes.meals}>\n        <Card>\n          <ul>{mealsList}</ul>\n        </Card>\n      </section>\n    </div>\n  )\n}\n\nexport default AvailableMeals\n"]},"metadata":{},"sourceType":"module"}