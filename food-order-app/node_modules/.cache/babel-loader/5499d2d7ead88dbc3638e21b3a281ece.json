{"ast":null,"code":"var _jsxFileName = \"/Users/braydon/Desktop/React_Training_2021/food-order-app/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useReducer } from 'react';\nimport CartButtonContext from './cart-button-context';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  // ---- ADD action ----\n  if (action.type === 'ADD') {\n    // update total amount with curr + (new price * new amount)\n    console.log('object: ' + JSON.stringify(action.item));\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount //update amount to current + added amount by action\n\n      };\n      updatedItems = [...state.items]; // init to current state of items\n\n      updatedItems[existingCartItemIndex] = updatedItem; // fill in final slot with newly added item\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  } // ---- REMOVE action ----\n\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex]; // Update Amount\n\n    const updatedTotalAmount = state.totalAmount - existingItem.price; // Update Items\n\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  } // ---- CLEAR action ----\n\n\n  if (action.type === 'CLEAR') {\n    return defaultCartState;\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartIsOpen, setCartIsOpen] = useState(false);\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState); // const [itemList, setItemList] = useState({\n  //   id: '',\n  //   name: '',\n  //   description: '',\n  //   price: 0,\n  // });\n\n  const openCartHandler = () => {\n    setCartIsOpen(true);\n    console.log(\"openCart hit\");\n  };\n\n  const closeCartHandler = () => {\n    console.log(\"closeCart hit\");\n    setCartIsOpen(false);\n  };\n\n  const cartBtnCtx = {\n    cartIsOpen: cartIsOpen,\n    setCartIsOpen: cartIsOpen ? closeCartHandler : openCartHandler\n  };\n\n  const AddItemToCartHandler = item => {\n    console.log('add item');\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const RemoveItemFromCartHandler = id => {\n    console.log('remove item');\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const clearCartHandler = () => {\n    console.log('clear items');\n    dispatchCartAction({\n      type: 'CLEAR'\n    });\n  };\n\n  const cartCtx = {\n    items: cartState.items,\n    count: cartState.amount,\n    AddItem: AddItemToCartHandler,\n    RemoveItem: RemoveItemFromCartHandler,\n    ClearCart: clearCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartButtonContext.Provider, {\n    value: cartBtnCtx,\n    children: /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n      value: cartCtx,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"OkcjiXa1YdQy1XW9HK7itA3F2jU=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/braydon/Desktop/React_Training_2021/food-order-app/src/store/CartProvider.js"],"names":["useState","useReducer","CartButtonContext","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","console","log","JSON","stringify","item","updatedTotalAmount","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartIsOpen","setCartIsOpen","cartState","dispatchCartAction","openCartHandler","closeCartHandler","cartBtnCtx","AddItemToCartHandler","RemoveItemFromCartHandler","clearCartHandler","cartCtx","count","AddItem","RemoveItem","ClearCart","children"],"mappings":"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","sourcesContent":["import { useState, useReducer } from 'react'\nimport CartButtonContext from './cart-button-context'\nimport CartContext from './cart-context'\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n\n  // ---- ADD action ----\n  if (action.type === 'ADD') {\n    // update total amount with curr + (new price * new amount)\n    console.log('object: ' + JSON.stringify(action.item))\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingCartItem = state.items[existingCartItemIndex];\n\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount //update amount to current + added amount by action\n      };\n      updatedItems = [...state.items]; // init to current state of items\n      updatedItems[existingCartItemIndex] = updatedItem; // fill in final slot with newly added item\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  // ---- REMOVE action ----\n  if (action.type === 'REMOVE') {\n\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingCartItemIndex];\n\n    // Update Amount\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n\n    // Update Items\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  // ---- CLEAR action ----\n  if (action.type === 'CLEAR') {\n    return defaultCartState;\n  }\n\n  return defaultCartState;\n}\n\nconst CartProvider = (props) => {\n  const [cartIsOpen, setCartIsOpen] = useState(false);\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n  // const [itemList, setItemList] = useState({\n  //   id: '',\n  //   name: '',\n  //   description: '',\n  //   price: 0,\n  // });\n\n  const openCartHandler = () => {\n    setCartIsOpen(true);\n    console.log(\"openCart hit\")\n  }\n\n  const closeCartHandler = () => {\n    console.log(\"closeCart hit\")\n    setCartIsOpen(false);\n  }\n\n  const cartBtnCtx = {\n    cartIsOpen: cartIsOpen,\n    setCartIsOpen: cartIsOpen ? closeCartHandler : openCartHandler\n  }\n\n  const AddItemToCartHandler = (item) => {\n    console.log('add item')\n    dispatchCartAction({type: 'ADD', item: item});\n  }\n\n  const RemoveItemFromCartHandler = (id) => {\n    console.log('remove item')\n    dispatchCartAction({type: 'REMOVE', id: id});\n  }\n\n  const clearCartHandler = () => {\n    console.log('clear items')\n    dispatchCartAction({type: 'CLEAR'});\n  };\n\n  const cartCtx = {\n    items: cartState.items,\n    count: cartState.amount,\n    AddItem: AddItemToCartHandler,\n    RemoveItem: RemoveItemFromCartHandler,\n    ClearCart: clearCartHandler, \n  }\n\n  return (\n    <CartButtonContext.Provider value={cartBtnCtx}>\n      <CartContext.Provider value={cartCtx}>\n        {props.children}\n      </CartContext.Provider>\n    </CartButtonContext.Provider>\n  )\n}\n\nexport default CartProvider\n"]},"metadata":{},"sourceType":"module"}