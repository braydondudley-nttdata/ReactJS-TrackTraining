{"ast":null,"code":"var _jsxFileName = \"/Users/braydon/Desktop/React_Training_2021/food-order-app/src/components/cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useContext, useState } from 'react';\nimport Modal from '../ui/Modal';\nimport CartItem from './CartItem';\nimport classes from \"./Cart.module.css\";\nimport CartButtonContext from '../../store/cart-button-context';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart(props) {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const cartBtnCtx = useContext(CartButtonContext);\n  const cartCtx = useContext(CartContext); // console.log(JSON.stringify(cartCtx)) // --debugging to see contents of cart\n  // const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.RemoveItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.AddItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true); // const isValid = true;\n    // if (isValid) {\n    //   console.log(\"order submitted\")\n    //   cartBtnCtx.setCartIsOpen()\n    // }\n  };\n\n  const submitOrderHandler = async userData => {\n    setIsSubmitting(true); // await fetch('https://saga-quick-attempt-default-rtdb.firebaseio.com/meals.json', {\n    //   method: 'POST',\n    //   body: JSON.stringify({\n    //     user: userData,\n    //     orderedItems: cartCtx.items,\n    //   }),\n    // })\n\n    setIsSubmitting(false);\n    setDidSubmit(true);\n    cartCtx.ClearCart();\n  };\n\n  const listItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      id: item.id,\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 21\n  }, this); // [{\n  //   id: 'c1', \n  //   name: 'Bob', \n  //   amount: 3, \n  //   price: 12.99,\n  //   onRemove={cartItemRemoveHandler.bind(null, item.id)},\n  //   onAdd={cartItemAddHandler.bind(null, item)}\n  // }].map(item => <li key={item.id}>{item.name}</li>)\n\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button--alt'],\n      onClick: cartBtnCtx.setCartIsOpen,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [listItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: cartCtx.totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n\n  const isSubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sending order data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 36\n  }, this);\n\n  const didSubmitModalContent = /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Successfully sent the order!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: cartBtnCtx.setCartIsOpen,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [!isSubmitting && !didSubmit && cartModalContent, isSubmitting && isSubmittingModalContent, !isSubmitting && didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cart, \"n4Sr3WFOxYQIRyfvjkp6DfDqUik=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/braydon/Desktop/React_Training_2021/food-order-app/src/components/cart/Cart.js"],"names":["Fragment","useContext","useState","Modal","CartItem","classes","CartButtonContext","CartContext","Checkout","Cart","props","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","cartBtnCtx","cartCtx","hasItems","items","length","cartItemRemoveHandler","id","RemoveItem","cartItemAddHandler","item","AddItem","amount","orderHandler","submitOrderHandler","userData","ClearCart","listItems","map","name","price","bind","modalActions","actions","setCartIsOpen","button","cartModalContent","total","totalAmount","onClose","isSubmittingModalContent","didSubmitModalContent"],"mappings":"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","sourcesContent":["import { Fragment, useContext, useState } from 'react'\n\nimport Modal from '../ui/Modal';\nimport CartItem from './CartItem';\nimport classes from \"./Cart.module.css\";\nimport CartButtonContext from '../../store/cart-button-context'\nimport CartContext from '../../store/cart-context'\nimport Checkout from './Checkout';\n\nfunction Cart(props) {\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n\n  const cartBtnCtx = useContext(CartButtonContext);\n  const cartCtx = useContext(CartContext);\n\n  // console.log(JSON.stringify(cartCtx)) // --debugging to see contents of cart\n\n  // const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.RemoveItem(id);\n  };\n  \n  const cartItemAddHandler = (item) => {\n    cartCtx.AddItem({ ...item, amount: 1 });\n  };\n \n  const orderHandler = () => {\n    setIsCheckout(true);\n\n    // const isValid = true;\n    // if (isValid) {\n    //   console.log(\"order submitted\")\n    //   cartBtnCtx.setCartIsOpen()\n    // }\n  };\n\n  const submitOrderHandler = async (userData) => {\n    setIsSubmitting(true)\n    \n    // await fetch('https://saga-quick-attempt-default-rtdb.firebaseio.com/meals.json', {\n    //   method: 'POST',\n    //   body: JSON.stringify({\n    //     user: userData,\n    //     orderedItems: cartCtx.items,\n    //   }),\n    // })\n    setIsSubmitting(false);\n    setDidSubmit(true);\n    cartCtx.ClearCart();\n  }\n\n  const listItems = <ul className={classes['cart-items']}>{\n    cartCtx.items.map((item) => (\n      <CartItem\n        key={item.id}\n        id={item.id}\n        name={item.name}\n        amount={item.amount}\n        price={item.price}\n        onRemove={cartItemRemoveHandler.bind(null, item.id)}\n        onAdd={cartItemAddHandler.bind(null, item)}\n      />\n    ))\n  }</ul>\n\n  // [{\n  //   id: 'c1', \n  //   name: 'Bob', \n  //   amount: 3, \n  //   price: 12.99,\n  //   onRemove={cartItemRemoveHandler.bind(null, item.id)},\n  //   onAdd={cartItemAddHandler.bind(null, item)}\n  // }].map(item => <li key={item.id}>{item.name}</li>)\n\n  const modalActions = (\n    <div className={classes.actions}>\n      <button className={classes['button--alt']} onClick={cartBtnCtx.setCartIsOpen}>\n        Close\n      </button>\n      {hasItems && (\n        <button className={classes.button} onClick={orderHandler}>\n          Order\n        </button>\n      )}\n    </div>\n  );\n\n  const cartModalContent = (\n    <Fragment>\n      {listItems}\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{cartCtx.totalAmount}</span>\n      </div>\n      {isCheckout && (\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />\n      )}\n      {!isCheckout && modalActions}\n    </Fragment>\n  );\n\n  const isSubmittingModalContent = <p>Sending order data...</p>;\n\n  const didSubmitModalContent = (\n    <Fragment>\n      <p>Successfully sent the order!</p>\n      <div className={classes.actions}>\n      <button className={classes.button} onClick={cartBtnCtx.setCartIsOpen}>\n        Close\n      </button>\n    </div>\n    </Fragment>\n  );\n\n  return (\n    <Modal onClose={props.onClose}>\n      {!isSubmitting && !didSubmit && cartModalContent}\n      {isSubmitting && isSubmittingModalContent}\n      {!isSubmitting && didSubmit && didSubmitModalContent}\n    </Modal>\n  )\n}\n\nexport default Cart\n"]},"metadata":{},"sourceType":"module"}