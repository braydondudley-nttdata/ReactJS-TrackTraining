{"ast":null,"code":"var _jsxFileName = \"/Users/braydon/Desktop/React_Training_2021/food-order-app/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\n// import { useState } from 'react'\nimport CartButtonContext from './cart-button-context'; // import CartContext from './cart-context'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartIsOpen, setCartIsOpen] = useState(false);\n\n  const openCartHandler = () => {\n    setCartIsOpen(true);\n  };\n\n  const closeCartHandler = () => {\n    setCartIsOpen(false);\n  };\n\n  const cartCtx = {\n    cartIsOpen: cartIsOpen\n  };\n  return /*#__PURE__*/_jsxDEV(CartButtonContext.Provider, {\n    value: CartButtonContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"QMVmY0RzK1Lc/0udnHmAX1cOPbQ=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/braydon/Desktop/React_Training_2021/food-order-app/src/store/CartProvider.js"],"names":["CartButtonContext","CartProvider","props","cartIsOpen","setCartIsOpen","useState","openCartHandler","closeCartHandler","cartCtx","children"],"mappings":";;;AAAA;AACA,OAAOA,iBAAP,MAA8B,uBAA9B,C,CACA;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5BF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,QAAMG,gBAAgB,GAAG,MAAM;AAC7BH,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA,QAAMI,OAAO,GAAG;AACdL,IAAAA,UAAU,EAAEA;AADE,GAAhB;AAIA,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAEH,iBAAnC;AAAA,cACGE,KAAK,CAACO;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApBD;;GAAMR,Y;;KAAAA,Y;AAsBN,eAAeA,YAAf","sourcesContent":["// import { useState } from 'react'\nimport CartButtonContext from './cart-button-context'\n// import CartContext from './cart-context'\n\nconst CartProvider = (props) => {\n  const [cartIsOpen, setCartIsOpen] = useState(false);\n\n  const openCartHandler = () => {\n    setCartIsOpen(true);\n  }\n\n  const closeCartHandler = () => {\n    setCartIsOpen(false);\n  }\n\n  const cartCtx = {\n    cartIsOpen: cartIsOpen\n  }\n\n  return (\n    <CartButtonContext.Provider value={CartButtonContext}>\n      {props.children}\n    </CartButtonContext.Provider>\n  )\n}\n\nexport default CartProvider\n"]},"metadata":{},"sourceType":"module"}