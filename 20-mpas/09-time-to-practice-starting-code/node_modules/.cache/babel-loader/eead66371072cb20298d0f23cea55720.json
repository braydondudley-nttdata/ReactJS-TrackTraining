{"ast":null,"code":"var _jsxFileName = \"/Users/braydon/Desktop/React_Training_2021/20-mpas/09-time-to-practice-starting-code/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useParams, Route } from 'react-router-dom';\nimport Comments from '../components/comments/Comments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_DATA = [{\n  id: 'q1',\n  author: 'Max',\n  text: 'this is a description'\n}, {\n  id: 'q2',\n  author: 'Max1',\n  text: 'this is a new description'\n}, {\n  id: 'q3',\n  author: 'Max2',\n  text: 'this is a newer description'\n}];\n\nfunction QuoteDetail() {\n  _s();\n\n  const params = useParams(); // gets values currently set in the url string???\n\n  const quote = DUMMY_DATA.find(quote => quote.id === params.quoteId); //.find() takes a function as argument??\n  // b/c it's stepping thru each element in array until it meets the conditional\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QuoteDetail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: params.quoteId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/Users/braydon/Desktop/React_Training_2021/20-mpas/09-time-to-practice-starting-code/src/pages/QuoteDetail.js"],"names":["Fragment","useParams","Route","Comments","DUMMY_DATA","id","author","text","QuoteDetail","params","quote","find","quoteId"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,kBAAjC;AAEA,OAAOC,QAAP,MAAqB,iCAArB;;AAEA,MAAMC,UAAU,GAAG,CACf;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CADe,EAEf;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,MAApB;AAA4BC,EAAAA,IAAI,EAAE;AAAlC,CAFe,EAGf;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,MAApB;AAA4BC,EAAAA,IAAI,EAAE;AAAlC,CAHe,CAAnB;;AAMA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAMC,MAAM,GAAGR,SAAS,EAAxB,CADmB,CACS;;AAE5B,QAAMS,KAAK,GAAGN,UAAU,CAACO,IAAX,CAAgBD,KAAK,IAAIA,KAAK,CAACL,EAAN,KAAaI,MAAM,CAACG,OAA7C,CAAd,CAHmB,CAGkD;AACrE;;AAEA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAIH,MAAM,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUH,MAAM,CAACG,OAAQ,WAAvC;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAfQJ,W;UACUP,S;;;KADVO,W;AAiBT,eAAeA,WAAf","sourcesContent":["import { Fragment } from 'react'\nimport { useParams, Route } from 'react-router-dom'\n\nimport Comments from '../components/comments/Comments';\n\nconst DUMMY_DATA = [\n    { id: 'q1', author: 'Max', text: 'this is a description' },\n    { id: 'q2', author: 'Max1', text: 'this is a new description' },\n    { id: 'q3', author: 'Max2', text: 'this is a newer description' }\n]\n\nfunction QuoteDetail() {\n    const params = useParams(); // gets values currently set in the url string???\n\n    const quote = DUMMY_DATA.find(quote => quote.id === params.quoteId); //.find() takes a function as argument??\n    // b/c it's stepping thru each element in array until it meets the conditional\n\n    return (\n        <Fragment>\n            <h1>QuoteDetail</h1>\n            <p>{params.quoteId}</p>\n            <Route path={`/quotes/${params.quoteId}/comments`}>\n                <Comments/>\n            </Route>\n        </Fragment>\n    )\n}\n\nexport default QuoteDetail\n"]},"metadata":{},"sourceType":"module"}